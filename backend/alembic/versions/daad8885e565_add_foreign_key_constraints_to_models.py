"""Add foreign key constraints to models

Revision ID: daad8885e565
Revises: 
Create Date: 2025-08-01 11:22:22.382611

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'daad8885e565'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transfer_transactions')
    op.drop_constraint('accounts_user_id_name_key', 'accounts', type_='unique')
    op.drop_index('idx_accounts_user_id', table_name='accounts')
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=False)
    op.drop_constraint('accounts_user_id_fkey', 'accounts', type_='foreignkey')
    op.create_foreign_key(None, 'accounts', 'users', ['user_id'], ['id'])
    op.drop_constraint('categories_user_id_name_key', 'categories', type_='unique')
    op.drop_index('idx_categories_user_id', table_name='categories')
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.drop_constraint('categories_user_id_fkey', 'categories', type_='foreignkey')
    op.create_foreign_key(None, 'categories', 'users', ['user_id'], ['id'])
    op.drop_index('idx_payees_user_id', table_name='payees')
    op.drop_constraint('payees_user_id_name_key', 'payees', type_='unique')
    op.create_index(op.f('ix_payees_id'), 'payees', ['id'], unique=False)
    op.drop_constraint('payees_user_id_fkey', 'payees', type_='foreignkey')
    op.create_foreign_key(None, 'payees', 'users', ['user_id'], ['id'])
    op.add_column('transactions', sa.Column('to_account_id', sa.UUID(), nullable=True))
    op.drop_index('idx_transactions_account_id', table_name='transactions')
    op.drop_index('idx_transactions_category_id', table_name='transactions')
    op.drop_index('idx_transactions_date', table_name='transactions')
    op.drop_index('idx_transactions_payee_id', table_name='transactions')
    op.drop_index('idx_transactions_type', table_name='transactions')
    op.drop_index('idx_transactions_user_id', table_name='transactions')
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.drop_constraint('transactions_payee_id_fkey', 'transactions', type_='foreignkey')
    op.drop_constraint('transactions_user_id_fkey', 'transactions', type_='foreignkey')
    op.drop_constraint('transactions_account_id_fkey', 'transactions', type_='foreignkey')
    op.drop_constraint('transactions_category_id_fkey', 'transactions', type_='foreignkey')
    op.create_foreign_key(None, 'transactions', 'accounts', ['to_account_id'], ['id'])
    op.create_foreign_key(None, 'transactions', 'categories', ['category_id'], ['id'])
    op.create_foreign_key(None, 'transactions', 'payees', ['payee_id'], ['id'])
    op.create_foreign_key(None, 'transactions', 'accounts', ['account_id'], ['id'])
    op.create_foreign_key(None, 'transactions', 'users', ['user_id'], ['id'])
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.create_foreign_key('transactions_category_id_fkey', 'transactions', 'categories', ['category_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key('transactions_account_id_fkey', 'transactions', 'accounts', ['account_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('transactions_user_id_fkey', 'transactions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('transactions_payee_id_fkey', 'transactions', 'payees', ['payee_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.create_index('idx_transactions_user_id', 'transactions', ['user_id'], unique=False)
    op.create_index('idx_transactions_type', 'transactions', ['type'], unique=False)
    op.create_index('idx_transactions_payee_id', 'transactions', ['payee_id'], unique=False)
    op.create_index('idx_transactions_date', 'transactions', ['date'], unique=False)
    op.create_index('idx_transactions_category_id', 'transactions', ['category_id'], unique=False)
    op.create_index('idx_transactions_account_id', 'transactions', ['account_id'], unique=False)
    op.drop_column('transactions', 'to_account_id')
    op.drop_constraint(None, 'payees', type_='foreignkey')
    op.create_foreign_key('payees_user_id_fkey', 'payees', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_payees_id'), table_name='payees')
    op.create_unique_constraint('payees_user_id_name_key', 'payees', ['user_id', 'name'])
    op.create_index('idx_payees_user_id', 'payees', ['user_id'], unique=False)
    op.drop_constraint(None, 'categories', type_='foreignkey')
    op.create_foreign_key('categories_user_id_fkey', 'categories', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.create_index('idx_categories_user_id', 'categories', ['user_id'], unique=False)
    op.create_unique_constraint('categories_user_id_name_key', 'categories', ['user_id', 'name'])
    op.drop_constraint(None, 'accounts', type_='foreignkey')
    op.create_foreign_key('accounts_user_id_fkey', 'accounts', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.create_index('idx_accounts_user_id', 'accounts', ['user_id'], unique=False)
    op.create_unique_constraint('accounts_user_id_name_key', 'accounts', ['user_id', 'name'])
    op.create_table('transfer_transactions',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('from_account_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('to_account_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('from_transaction_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('to_transaction_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('amount', sa.NUMERIC(precision=12, scale=2), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['from_account_id'], ['accounts.id'], name='transfer_transactions_from_account_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['from_transaction_id'], ['transactions.id'], name='transfer_transactions_from_transaction_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_account_id'], ['accounts.id'], name='transfer_transactions_to_account_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_transaction_id'], ['transactions.id'], name='transfer_transactions_to_transaction_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='transfer_transactions_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='transfer_transactions_pkey')
    )
    # ### end Alembic commands ###